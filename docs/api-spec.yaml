openapi: 3.0.3
info:
  title: AI Real Estate Auction Analyzer API
  description: |
    RESTful API for analyzing and ranking Italian real estate auctions.
    
    ## Features
    - Browse and search auctions
    - AI-powered ranking and scoring
    - Semantic vector search
    - Real-time WebSocket notifications
    - User preferences and saved searches
    
    ## Authentication
    Most endpoints require JWT authentication. Include the token in the Authorization header:
    ```
    Authorization: Bearer <your_jwt_token>
    ```
  version: 1.0.0
  contact:
    name: API Support
    email: support@auction-analyzer.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8000/api/v1
    description: Development server
  - url: https://api.auction-analyzer.com/api/v1
    description: Production server

tags:
  - name: auctions
    description: Auction listing and details
  - name: search
    description: Search and filtering
  - name: users
    description: User management and authentication
  - name: preferences
    description: Saved searches and notifications
  - name: stats
    description: Market statistics and analytics

paths:
  /auctions:
    get:
      tags: [auctions]
      summary: List auctions
      description: Get paginated list of auctions with optional filters
      operationId: listAuctions
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: page_size
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: city
          in: query
          schema:
            type: string
        - name: property_type
          in: query
          schema:
            $ref: '#/components/schemas/PropertyType'
        - name: min_price
          in: query
          schema:
            type: number
        - name: max_price
          in: query
          schema:
            type: number
        - name: min_score
          in: query
          schema:
            type: number
            minimum: 0
            maximum: 100
        - name: status
          in: query
          schema:
            $ref: '#/components/schemas/AuctionStatus'
            default: active
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuctionListResponse'
  
  /auctions/{auctionId}:
    get:
      tags: [auctions]
      summary: Get auction details
      operationId: getAuction
      parameters:
        - name: auctionId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Auction found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auction'
        '404':
          description: Auction not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /auctions/search/text:
    get:
      tags: [search]
      summary: Search auctions by text
      operationId: searchAuctionsText
      parameters:
        - name: q
          in: query
          required: true
          schema:
            type: string
            minLength: 1
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: page_size
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuctionListResponse'
  
  /auctions/nearby/{auctionId}:
    get:
      tags: [search]
      summary: Find nearby auctions
      description: Get auctions geographically close to specified auction
      operationId: getNearbyAuctions
      parameters:
        - name: auctionId
          in: path
          required: true
          schema:
            type: integer
        - name: radius_km
          in: query
          schema:
            type: number
            default: 10.0
            minimum: 0.1
            maximum: 100
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 50
      responses:
        '200':
          description: Nearby auctions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Auction'
  
  /stats/market:
    get:
      tags: [stats]
      summary: Get market statistics
      operationId: getMarketStats
      parameters:
        - name: city
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Market statistics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketStats'
  
  /users/register:
    post:
      tags: [users]
      summary: Register new user
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Email already registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /users/login:
    post:
      tags: [users]
      summary: Login user
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /users/me:
    get:
      tags: [users]
      summary: Get current user
      operationId: getCurrentUser
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  
  /preferences:
    get:
      tags: [preferences]
      summary: List user preferences
      operationId: listPreferences
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of preferences
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchPreference'
    
    post:
      tags: [preferences]
      summary: Create preference
      operationId: createPreference
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchPreferenceCreate'
      responses:
        '201':
          description: Preference created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchPreference'
  
  /preferences/{preferenceId}:
    get:
      tags: [preferences]
      summary: Get preference
      operationId: getPreference
      security:
        - bearerAuth: []
      parameters:
        - name: preferenceId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Preference details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchPreference'
        '404':
          description: Preference not found
    
    put:
      tags: [preferences]
      summary: Update preference
      operationId: updatePreference
      security:
        - bearerAuth: []
      parameters:
        - name: preferenceId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchPreferenceUpdate'
      responses:
        '200':
          description: Preference updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchPreference'
    
    delete:
      tags: [preferences]
      summary: Delete preference
      operationId: deletePreference
      security:
        - bearerAuth: []
      parameters:
        - name: preferenceId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Preference deleted

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  
  responses:
    UnauthorizedError:
      description: Authentication required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  
  schemas:
    PropertyType:
      type: string
      enum:
        - Appartamento
        - Villa
        - Attico
        - Locale Commerciale
        - Ufficio
        - Magazzino
        - Terreno
        - Box
        - Rustico
        - Altro
    
    AuctionStatus:
      type: string
      enum:
        - active
        - ended
        - suspended
        - cancelled
    
    Auction:
      type: object
      properties:
        id:
          type: integer
        external_id:
          type: string
        title:
          type: string
        description:
          type: string
        property_type:
          $ref: '#/components/schemas/PropertyType'
        city:
          type: string
        province:
          type: string
        address:
          type: string
        latitude:
          type: number
        longitude:
          type: number
        surface_sqm:
          type: number
        rooms:
          type: integer
        bathrooms:
          type: integer
        floor:
          type: integer
        base_price:
          type: number
        current_price:
          type: number
        estimated_value:
          type: number
        auction_date:
          type: string
          format: date-time
        court:
          type: string
        status:
          $ref: '#/components/schemas/AuctionStatus'
        ai_score:
          type: number
          minimum: 0
          maximum: 100
        score_breakdown:
          type: object
        source_url:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    
    AuctionListResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Auction'
        total:
          type: integer
        page:
          type: integer
        page_size:
          type: integer
        pages:
          type: integer
    
    MarketStats:
      type: object
      properties:
        total_auctions:
          type: integer
        active_auctions:
          type: integer
        avg_base_price:
          type: number
        avg_score:
          type: number
        property_type_distribution:
          type: object
          additionalProperties:
            type: integer
        city_distribution:
          type: object
          additionalProperties:
            type: integer
        price_ranges:
          type: object
          additionalProperties:
            type: integer
    
    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
          format: email
        is_active:
          type: boolean
        is_admin:
          type: boolean
        created_at:
          type: string
          format: date-time
    
    UserCreate:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 8
    
    UserLogin:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
    
    Token:
      type: object
      properties:
        access_token:
          type: string
        token_type:
          type: string
          default: bearer
    
    SearchPreference:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        name:
          type: string
        filters:
          type: object
        notify:
          type: boolean
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    
    SearchPreferenceCreate:
      type: object
      required:
        - name
        - filters
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
        filters:
          type: object
        notify:
          type: boolean
          default: true
    
    SearchPreferenceUpdate:
      type: object
      properties:
        name:
          type: string
        filters:
          type: object
        notify:
          type: boolean
        is_active:
          type: boolean
    
    Error:
      type: object
      properties:
        detail:
          type: string
